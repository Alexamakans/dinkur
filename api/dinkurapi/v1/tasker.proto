// Dinkur the task time tracking utility.
// <https://github.com/dinkur/dinkur>
//
// Copyright (C) 2021 Kalle Fagerberg
// SPDX-FileCopyrightText: 2021 Kalle Fagerberg
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This program is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License along with
// this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/dinkur/dinkur/api/dinkurapi/v1";

package dinkurapi.v1;

service Tasker {
  rpc Ping (PingRequest) returns (PingResponse);
  rpc GetTask (GetTaskRequest) returns (GetTaskResponse);
  rpc GetActiveTask (GetActiveTaskRequest) returns (GetActiveTaskResponse);
  rpc GetTaskList (GetTaskListRequest) returns (GetTaskListResponse);
  rpc CreateTask (CreateTaskRequest) returns (CreateTaskResponse);
  rpc UpdateTask (UpdateTaskRequest) returns (UpdateTaskResponse);
  rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskResponse);
  rpc StopActiveTask (StopActiveTaskRequest) returns (StopActiveTaskResponse);
}

message PingRequest {
}

message PingResponse {
}

message GetTaskRequest {
  uint64 id = 1;
}

message GetTaskResponse {
  Task task = 1;
}

message GetActiveTaskRequest {
}

message GetActiveTaskResponse {
  Task active_task = 1;
}

message GetTaskListRequest {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
  uint64 limit = 3;
  enum Shorthand {
    NONE = 0;
    PAST = 1;
    FUTURE = 2;
    THIS_DAY = 3;
    THIS_MON_TO_SUN = 4;
    PREV_DAY = 5;
    PREV_MON_TO_SUN = 6;
    NEXT_DAY = 7;
    NEXT_MON_TO_SUN = 8;
  }
  Shorthand shorthand = 4;
}

message GetTaskListResponse {
  repeated Task tasks = 1;
}

message CreateTaskRequest {
  string name = 1;
  google.protobuf.Timestamp start = 2;
  google.protobuf.Timestamp end = 3;
  uint64 start_after_id_or_zero = 4;
  uint64 end_before_id_or_zero = 5;
  bool start_after_last = 6;
}

message CreateTaskResponse {
  Task created_task = 1;
  Task previously_active_task = 2;
}

message UpdateTaskRequest {
  uint64 id_or_zero = 1;
  string name = 2;
  google.protobuf.Timestamp start = 3;
  google.protobuf.Timestamp end = 4;
  bool append_name = 5;
  uint64 start_after_id_or_zero = 6;
  uint64 end_before_id_or_zero = 7;
  bool start_after_last = 8;
}

message UpdateTaskResponse {
  Task before = 1;
  Task after = 2;
}

message DeleteTaskRequest {
  uint64 id = 1;
}

message DeleteTaskResponse {
  Task deleted_task = 1;
}

message StopActiveTaskRequest {
  google.protobuf.Timestamp end = 1;
}

message StopActiveTaskResponse {
  Task stopped_task = 1;
}

message Task {
  uint64 id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string name = 4;
  google.protobuf.Timestamp start = 5;
  google.protobuf.Timestamp end = 6;
}

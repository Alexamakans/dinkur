// Dinkur the task time tracking utility.
// <https://github.com/dinkur/dinkur>
//
// Copyright (C) 2021 Kalle Fagerberg
// SPDX-FileCopyrightText: 2021 Kalle Fagerberg
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This program is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License along with
// this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: api/dinkurapi/v1/tasker.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTaskListRequest_Shorthand int32

const (
	GetTaskListRequest_NONE            GetTaskListRequest_Shorthand = 0
	GetTaskListRequest_PAST            GetTaskListRequest_Shorthand = 1
	GetTaskListRequest_FUTURE          GetTaskListRequest_Shorthand = 2
	GetTaskListRequest_THIS_DAY        GetTaskListRequest_Shorthand = 3
	GetTaskListRequest_THIS_MON_TO_SUN GetTaskListRequest_Shorthand = 4
	GetTaskListRequest_PREV_DAY        GetTaskListRequest_Shorthand = 5
	GetTaskListRequest_PREV_MON_TO_SUN GetTaskListRequest_Shorthand = 6
	GetTaskListRequest_NEXT_DAY        GetTaskListRequest_Shorthand = 7
	GetTaskListRequest_NEXT_MON_TO_SUN GetTaskListRequest_Shorthand = 8
)

// Enum value maps for GetTaskListRequest_Shorthand.
var (
	GetTaskListRequest_Shorthand_name = map[int32]string{
		0: "NONE",
		1: "PAST",
		2: "FUTURE",
		3: "THIS_DAY",
		4: "THIS_MON_TO_SUN",
		5: "PREV_DAY",
		6: "PREV_MON_TO_SUN",
		7: "NEXT_DAY",
		8: "NEXT_MON_TO_SUN",
	}
	GetTaskListRequest_Shorthand_value = map[string]int32{
		"NONE":            0,
		"PAST":            1,
		"FUTURE":          2,
		"THIS_DAY":        3,
		"THIS_MON_TO_SUN": 4,
		"PREV_DAY":        5,
		"PREV_MON_TO_SUN": 6,
		"NEXT_DAY":        7,
		"NEXT_MON_TO_SUN": 8,
	}
)

func (x GetTaskListRequest_Shorthand) Enum() *GetTaskListRequest_Shorthand {
	p := new(GetTaskListRequest_Shorthand)
	*p = x
	return p
}

func (x GetTaskListRequest_Shorthand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTaskListRequest_Shorthand) Descriptor() protoreflect.EnumDescriptor {
	return file_api_dinkurapi_v1_tasker_proto_enumTypes[0].Descriptor()
}

func (GetTaskListRequest_Shorthand) Type() protoreflect.EnumType {
	return &file_api_dinkurapi_v1_tasker_proto_enumTypes[0]
}

func (x GetTaskListRequest_Shorthand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTaskListRequest_Shorthand.Descriptor instead.
func (GetTaskListRequest_Shorthand) EnumDescriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{6, 0}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{0}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{1}
}

type GetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetActiveTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveTaskRequest) Reset() {
	*x = GetActiveTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTaskRequest) ProtoMessage() {}

func (x *GetActiveTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTaskRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{4}
}

type GetActiveTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveTask *Task `protobuf:"bytes,1,opt,name=active_task,json=activeTask,proto3" json:"active_task,omitempty"`
}

func (x *GetActiveTaskResponse) Reset() {
	*x = GetActiveTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTaskResponse) ProtoMessage() {}

func (x *GetActiveTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTaskResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{5}
}

func (x *GetActiveTaskResponse) GetActiveTask() *Task {
	if x != nil {
		return x.ActiveTask
	}
	return nil
}

type GetTaskListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start     *timestamppb.Timestamp       `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End       *timestamppb.Timestamp       `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Limit     uint64                       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Shorthand GetTaskListRequest_Shorthand `protobuf:"varint,4,opt,name=shorthand,proto3,enum=dinkurapi.v1.GetTaskListRequest_Shorthand" json:"shorthand,omitempty"`
}

func (x *GetTaskListRequest) Reset() {
	*x = GetTaskListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskListRequest) ProtoMessage() {}

func (x *GetTaskListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskListRequest.ProtoReflect.Descriptor instead.
func (*GetTaskListRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{6}
}

func (x *GetTaskListRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetTaskListRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetTaskListRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTaskListRequest) GetShorthand() GetTaskListRequest_Shorthand {
	if x != nil {
		return x.Shorthand
	}
	return GetTaskListRequest_NONE
}

type GetTaskListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetTaskListResponse) Reset() {
	*x = GetTaskListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskListResponse) ProtoMessage() {}

func (x *GetTaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskListResponse.ProtoReflect.Descriptor instead.
func (*GetTaskListResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{7}
}

func (x *GetTaskListResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Start              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End                *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	StartAfterIdOrZero uint64                 `protobuf:"varint,4,opt,name=start_after_id_or_zero,json=startAfterIdOrZero,proto3" json:"start_after_id_or_zero,omitempty"`
	EndBeforeIdOrZero  uint64                 `protobuf:"varint,5,opt,name=end_before_id_or_zero,json=endBeforeIdOrZero,proto3" json:"end_before_id_or_zero,omitempty"`
	StartAfterLast     bool                   `protobuf:"varint,6,opt,name=start_after_last,json=startAfterLast,proto3" json:"start_after_last,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTaskRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CreateTaskRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *CreateTaskRequest) GetStartAfterIdOrZero() uint64 {
	if x != nil {
		return x.StartAfterIdOrZero
	}
	return 0
}

func (x *CreateTaskRequest) GetEndBeforeIdOrZero() uint64 {
	if x != nil {
		return x.EndBeforeIdOrZero
	}
	return 0
}

func (x *CreateTaskRequest) GetStartAfterLast() bool {
	if x != nil {
		return x.StartAfterLast
	}
	return false
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTask          *Task `protobuf:"bytes,1,opt,name=created_task,json=createdTask,proto3" json:"created_task,omitempty"`
	PreviouslyActiveTask *Task `protobuf:"bytes,2,opt,name=previously_active_task,json=previouslyActiveTask,proto3" json:"previously_active_task,omitempty"`
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTaskResponse) GetCreatedTask() *Task {
	if x != nil {
		return x.CreatedTask
	}
	return nil
}

func (x *CreateTaskResponse) GetPreviouslyActiveTask() *Task {
	if x != nil {
		return x.PreviouslyActiveTask
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOrZero   uint64                 `protobuf:"varint,1,opt,name=id_or_zero,json=idOrZero,proto3" json:"id_or_zero,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Start      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	AppendName bool                   `protobuf:"varint,5,opt,name=append_name,json=appendName,proto3" json:"append_name,omitempty"`
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTaskRequest) GetIdOrZero() uint64 {
	if x != nil {
		return x.IdOrZero
	}
	return 0
}

func (x *UpdateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTaskRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *UpdateTaskRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *UpdateTaskRequest) GetAppendName() bool {
	if x != nil {
		return x.AppendName
	}
	return false
}

type UpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Before *Task `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After  *Task `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTaskResponse) GetBefore() *Task {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *UpdateTaskResponse) GetAfter() *Task {
	if x != nil {
		return x.After
	}
	return nil
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteTaskRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedTask *Task `protobuf:"bytes,1,opt,name=deleted_task,json=deletedTask,proto3" json:"deleted_task,omitempty"`
}

func (x *DeleteTaskResponse) Reset() {
	*x = DeleteTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskResponse) ProtoMessage() {}

func (x *DeleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteTaskResponse) GetDeletedTask() *Task {
	if x != nil {
		return x.DeletedTask
	}
	return nil
}

type StopActiveTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	End *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StopActiveTaskRequest) Reset() {
	*x = StopActiveTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActiveTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActiveTaskRequest) ProtoMessage() {}

func (x *StopActiveTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActiveTaskRequest.ProtoReflect.Descriptor instead.
func (*StopActiveTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{14}
}

func (x *StopActiveTaskRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type StopActiveTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoppedTask *Task `protobuf:"bytes,1,opt,name=stopped_task,json=stoppedTask,proto3" json:"stopped_task,omitempty"`
}

func (x *StopActiveTaskResponse) Reset() {
	*x = StopActiveTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActiveTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActiveTaskResponse) ProtoMessage() {}

func (x *StopActiveTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActiveTaskResponse.ProtoReflect.Descriptor instead.
func (*StopActiveTaskResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{15}
}

func (x *StopActiveTaskResponse) GetStoppedTask() *Task {
	if x != nil {
		return x.StoppedTask
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name      string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Start     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_tasker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_tasker_proto_rawDescGZIP(), []int{16}
}

func (x *Task) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Task) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_api_dinkurapi_v1_tasker_proto protoreflect.FileDescriptor

var file_api_dinkurapi_v1_tasker_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a,
	0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x22, 0xeb, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x48, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x50, 0x41, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x55, 0x54,
	0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x49, 0x53, 0x5f, 0x44, 0x41,
	0x59, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x48, 0x49, 0x53, 0x5f, 0x4d, 0x4f, 0x4e, 0x5f,
	0x54, 0x4f, 0x5f, 0x53, 0x55, 0x4e, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x45, 0x56,
	0x5f, 0x44, 0x41, 0x59, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x45, 0x56, 0x5f, 0x4d,
	0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x55, 0x4e, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4e,
	0x45, 0x58, 0x54, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x45, 0x58,
	0x54, 0x5f, 0x4d, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x55, 0x4e, 0x10, 0x08, 0x22, 0x3f,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x97, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x7a,
	0x65, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x30, 0x0a,
	0x15, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6f,
	0x72, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65, 0x6e,
	0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x48, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x22, 0xc6, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x6f, 0x72,
	0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x64, 0x4f,
	0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69,
	0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x45, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22,
	0x4f, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x22, 0x80, 0x02, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x32, 0x8d, 0x05, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75,
	0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x22, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x6e,
	0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75,
	0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_dinkurapi_v1_tasker_proto_rawDescOnce sync.Once
	file_api_dinkurapi_v1_tasker_proto_rawDescData = file_api_dinkurapi_v1_tasker_proto_rawDesc
)

func file_api_dinkurapi_v1_tasker_proto_rawDescGZIP() []byte {
	file_api_dinkurapi_v1_tasker_proto_rawDescOnce.Do(func() {
		file_api_dinkurapi_v1_tasker_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_dinkurapi_v1_tasker_proto_rawDescData)
	})
	return file_api_dinkurapi_v1_tasker_proto_rawDescData
}

var file_api_dinkurapi_v1_tasker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_dinkurapi_v1_tasker_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_dinkurapi_v1_tasker_proto_goTypes = []interface{}{
	(GetTaskListRequest_Shorthand)(0), // 0: dinkurapi.v1.GetTaskListRequest.Shorthand
	(*PingRequest)(nil),               // 1: dinkurapi.v1.PingRequest
	(*PingResponse)(nil),              // 2: dinkurapi.v1.PingResponse
	(*GetTaskRequest)(nil),            // 3: dinkurapi.v1.GetTaskRequest
	(*GetTaskResponse)(nil),           // 4: dinkurapi.v1.GetTaskResponse
	(*GetActiveTaskRequest)(nil),      // 5: dinkurapi.v1.GetActiveTaskRequest
	(*GetActiveTaskResponse)(nil),     // 6: dinkurapi.v1.GetActiveTaskResponse
	(*GetTaskListRequest)(nil),        // 7: dinkurapi.v1.GetTaskListRequest
	(*GetTaskListResponse)(nil),       // 8: dinkurapi.v1.GetTaskListResponse
	(*CreateTaskRequest)(nil),         // 9: dinkurapi.v1.CreateTaskRequest
	(*CreateTaskResponse)(nil),        // 10: dinkurapi.v1.CreateTaskResponse
	(*UpdateTaskRequest)(nil),         // 11: dinkurapi.v1.UpdateTaskRequest
	(*UpdateTaskResponse)(nil),        // 12: dinkurapi.v1.UpdateTaskResponse
	(*DeleteTaskRequest)(nil),         // 13: dinkurapi.v1.DeleteTaskRequest
	(*DeleteTaskResponse)(nil),        // 14: dinkurapi.v1.DeleteTaskResponse
	(*StopActiveTaskRequest)(nil),     // 15: dinkurapi.v1.StopActiveTaskRequest
	(*StopActiveTaskResponse)(nil),    // 16: dinkurapi.v1.StopActiveTaskResponse
	(*Task)(nil),                      // 17: dinkurapi.v1.Task
	(*timestamppb.Timestamp)(nil),     // 18: google.protobuf.Timestamp
}
var file_api_dinkurapi_v1_tasker_proto_depIdxs = []int32{
	17, // 0: dinkurapi.v1.GetTaskResponse.task:type_name -> dinkurapi.v1.Task
	17, // 1: dinkurapi.v1.GetActiveTaskResponse.active_task:type_name -> dinkurapi.v1.Task
	18, // 2: dinkurapi.v1.GetTaskListRequest.start:type_name -> google.protobuf.Timestamp
	18, // 3: dinkurapi.v1.GetTaskListRequest.end:type_name -> google.protobuf.Timestamp
	0,  // 4: dinkurapi.v1.GetTaskListRequest.shorthand:type_name -> dinkurapi.v1.GetTaskListRequest.Shorthand
	17, // 5: dinkurapi.v1.GetTaskListResponse.tasks:type_name -> dinkurapi.v1.Task
	18, // 6: dinkurapi.v1.CreateTaskRequest.start:type_name -> google.protobuf.Timestamp
	18, // 7: dinkurapi.v1.CreateTaskRequest.end:type_name -> google.protobuf.Timestamp
	17, // 8: dinkurapi.v1.CreateTaskResponse.created_task:type_name -> dinkurapi.v1.Task
	17, // 9: dinkurapi.v1.CreateTaskResponse.previously_active_task:type_name -> dinkurapi.v1.Task
	18, // 10: dinkurapi.v1.UpdateTaskRequest.start:type_name -> google.protobuf.Timestamp
	18, // 11: dinkurapi.v1.UpdateTaskRequest.end:type_name -> google.protobuf.Timestamp
	17, // 12: dinkurapi.v1.UpdateTaskResponse.before:type_name -> dinkurapi.v1.Task
	17, // 13: dinkurapi.v1.UpdateTaskResponse.after:type_name -> dinkurapi.v1.Task
	17, // 14: dinkurapi.v1.DeleteTaskResponse.deleted_task:type_name -> dinkurapi.v1.Task
	18, // 15: dinkurapi.v1.StopActiveTaskRequest.end:type_name -> google.protobuf.Timestamp
	17, // 16: dinkurapi.v1.StopActiveTaskResponse.stopped_task:type_name -> dinkurapi.v1.Task
	18, // 17: dinkurapi.v1.Task.created_at:type_name -> google.protobuf.Timestamp
	18, // 18: dinkurapi.v1.Task.updated_at:type_name -> google.protobuf.Timestamp
	18, // 19: dinkurapi.v1.Task.start:type_name -> google.protobuf.Timestamp
	18, // 20: dinkurapi.v1.Task.end:type_name -> google.protobuf.Timestamp
	1,  // 21: dinkurapi.v1.Tasker.Ping:input_type -> dinkurapi.v1.PingRequest
	3,  // 22: dinkurapi.v1.Tasker.GetTask:input_type -> dinkurapi.v1.GetTaskRequest
	5,  // 23: dinkurapi.v1.Tasker.GetActiveTask:input_type -> dinkurapi.v1.GetActiveTaskRequest
	7,  // 24: dinkurapi.v1.Tasker.GetTaskList:input_type -> dinkurapi.v1.GetTaskListRequest
	9,  // 25: dinkurapi.v1.Tasker.CreateTask:input_type -> dinkurapi.v1.CreateTaskRequest
	11, // 26: dinkurapi.v1.Tasker.UpdateTask:input_type -> dinkurapi.v1.UpdateTaskRequest
	13, // 27: dinkurapi.v1.Tasker.DeleteTask:input_type -> dinkurapi.v1.DeleteTaskRequest
	15, // 28: dinkurapi.v1.Tasker.StopActiveTask:input_type -> dinkurapi.v1.StopActiveTaskRequest
	2,  // 29: dinkurapi.v1.Tasker.Ping:output_type -> dinkurapi.v1.PingResponse
	4,  // 30: dinkurapi.v1.Tasker.GetTask:output_type -> dinkurapi.v1.GetTaskResponse
	6,  // 31: dinkurapi.v1.Tasker.GetActiveTask:output_type -> dinkurapi.v1.GetActiveTaskResponse
	8,  // 32: dinkurapi.v1.Tasker.GetTaskList:output_type -> dinkurapi.v1.GetTaskListResponse
	10, // 33: dinkurapi.v1.Tasker.CreateTask:output_type -> dinkurapi.v1.CreateTaskResponse
	12, // 34: dinkurapi.v1.Tasker.UpdateTask:output_type -> dinkurapi.v1.UpdateTaskResponse
	14, // 35: dinkurapi.v1.Tasker.DeleteTask:output_type -> dinkurapi.v1.DeleteTaskResponse
	16, // 36: dinkurapi.v1.Tasker.StopActiveTask:output_type -> dinkurapi.v1.StopActiveTaskResponse
	29, // [29:37] is the sub-list for method output_type
	21, // [21:29] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_dinkurapi_v1_tasker_proto_init() }
func file_api_dinkurapi_v1_tasker_proto_init() {
	if File_api_dinkurapi_v1_tasker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_dinkurapi_v1_tasker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActiveTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActiveTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_tasker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_dinkurapi_v1_tasker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_dinkurapi_v1_tasker_proto_goTypes,
		DependencyIndexes: file_api_dinkurapi_v1_tasker_proto_depIdxs,
		EnumInfos:         file_api_dinkurapi_v1_tasker_proto_enumTypes,
		MessageInfos:      file_api_dinkurapi_v1_tasker_proto_msgTypes,
	}.Build()
	File_api_dinkurapi_v1_tasker_proto = out.File
	file_api_dinkurapi_v1_tasker_proto_rawDesc = nil
	file_api_dinkurapi_v1_tasker_proto_goTypes = nil
	file_api_dinkurapi_v1_tasker_proto_depIdxs = nil
}

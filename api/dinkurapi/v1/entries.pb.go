// Dinkur the task time tracking utility.
// <https://github.com/dinkur/dinkur>
//
// Copyright (C) 2021 Kalle Fagerberg
// SPDX-FileCopyrightText: 2021 Kalle Fagerberg
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
// more details.
//
// You should have received a copy of the GNU General Public License along
// with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: api/dinkurapi/v1/entries.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Shorthand is an enumeration of time span shorthands used for easier
// queries.
type GetEntryListRequest_Shorthand int32

const (
	// UNSPECIFIED means no shorthand filtering is applied.
	GetEntryListRequest_SHORTHAND_UNSPECIFIED GetEntryListRequest_Shorthand = 0
	// SHORTHAND_PAST sets the default end timestamp to now, while leaving the
	// start timestamp unchanged.
	GetEntryListRequest_SHORTHAND_PAST GetEntryListRequest_Shorthand = 1
	// SHORTHAND_FUTURE sets the default start timestamp to now, while leaving
	// the end timestamp unchanged.
	GetEntryListRequest_SHORTHAND_FUTURE GetEntryListRequest_Shorthand = 2
	// SHORTHAND_THIS_DAY sets the default start timestamp to 00:00:00 today
	// and the default end timestamp to 23:59:59 today.
	GetEntryListRequest_SHORTHAND_THIS_DAY GetEntryListRequest_Shorthand = 3
	// SHORTHAND_THIS_MON_TO_SUN sets the default start timestamp to 00:00:00
	// on monday this week and the default end timestamp to 23:59:59 on sunday
	// this week.
	GetEntryListRequest_SHORTHAND_THIS_MON_TO_SUN GetEntryListRequest_Shorthand = 4
	// SHORTHAND_PREV_DAY sets the default start timestamp to 00:00:00 yesterday
	// and the default end timestamp to 23:59:59 yesterday.
	GetEntryListRequest_SHORTHAND_PREV_DAY GetEntryListRequest_Shorthand = 5
	// SHORTHAND_PREV_MON_TO_SUN sets the default start timestamp to 00:00:00
	// on monday last week and the default end timestamp to 23:59:59 on sunday
	// last week.
	GetEntryListRequest_SHORTHAND_PREV_MON_TO_SUN GetEntryListRequest_Shorthand = 6
	// SHORTHAND_NEXT_DAY sets the default start timestamp to 00:00:00 tomorrow
	// and the default end timestamp to 23:59:59 tomorrow.
	GetEntryListRequest_SHORTHAND_NEXT_DAY GetEntryListRequest_Shorthand = 7
	// SHORTHAND_NEXT_MON_TO_SUN sets the default start timestamp to 00:00:00
	// on monday next week and the default end timestamp to 23:59:59 on sunday
	// next week.
	GetEntryListRequest_SHORTHAND_NEXT_MON_TO_SUN GetEntryListRequest_Shorthand = 8
)

// Enum value maps for GetEntryListRequest_Shorthand.
var (
	GetEntryListRequest_Shorthand_name = map[int32]string{
		0: "SHORTHAND_UNSPECIFIED",
		1: "SHORTHAND_PAST",
		2: "SHORTHAND_FUTURE",
		3: "SHORTHAND_THIS_DAY",
		4: "SHORTHAND_THIS_MON_TO_SUN",
		5: "SHORTHAND_PREV_DAY",
		6: "SHORTHAND_PREV_MON_TO_SUN",
		7: "SHORTHAND_NEXT_DAY",
		8: "SHORTHAND_NEXT_MON_TO_SUN",
	}
	GetEntryListRequest_Shorthand_value = map[string]int32{
		"SHORTHAND_UNSPECIFIED":     0,
		"SHORTHAND_PAST":            1,
		"SHORTHAND_FUTURE":          2,
		"SHORTHAND_THIS_DAY":        3,
		"SHORTHAND_THIS_MON_TO_SUN": 4,
		"SHORTHAND_PREV_DAY":        5,
		"SHORTHAND_PREV_MON_TO_SUN": 6,
		"SHORTHAND_NEXT_DAY":        7,
		"SHORTHAND_NEXT_MON_TO_SUN": 8,
	}
)

func (x GetEntryListRequest_Shorthand) Enum() *GetEntryListRequest_Shorthand {
	p := new(GetEntryListRequest_Shorthand)
	*p = x
	return p
}

func (x GetEntryListRequest_Shorthand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetEntryListRequest_Shorthand) Descriptor() protoreflect.EnumDescriptor {
	return file_api_dinkurapi_v1_entries_proto_enumTypes[0].Descriptor()
}

func (GetEntryListRequest_Shorthand) Type() protoreflect.EnumType {
	return &file_api_dinkurapi_v1_entries_proto_enumTypes[0]
}

func (x GetEntryListRequest_Shorthand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetEntryListRequest_Shorthand.Descriptor instead.
func (GetEntryListRequest_Shorthand) EnumDescriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{6, 0}
}

// PingRequest is an empty message and unused. It is here as a
// placeholder for potential future use.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{0}
}

// PingResponse is an empty message and unused. It is here as a
// placeholder for potential future use.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{1}
}

// GetEntryRequest holds the ID of the entry to get.
type GetEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id is the ID of the entry to get.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEntryRequest) Reset() {
	*x = GetEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryRequest) ProtoMessage() {}

func (x *GetEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryRequest.ProtoReflect.Descriptor instead.
func (*GetEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{2}
}

func (x *GetEntryRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetEntryResponse holds the entry gotten by ID.
type GetEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entry is the entry gotten by ID.
	Entry *Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *GetEntryResponse) Reset() {
	*x = GetEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryResponse) ProtoMessage() {}

func (x *GetEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryResponse.ProtoReflect.Descriptor instead.
func (*GetEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{3}
}

func (x *GetEntryResponse) GetEntry() *Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// GetActiveEntryRequest is an empty message and unused. It is here as a
// placeholder for potential future use.
type GetActiveEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveEntryRequest) Reset() {
	*x = GetActiveEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveEntryRequest) ProtoMessage() {}

func (x *GetActiveEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveEntryRequest.ProtoReflect.Descriptor instead.
func (*GetActiveEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{4}
}

// GetActiveEntryResponse holds the currently active entry (if any).
type GetActiveEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ActiveEntry is the currently active entry (if any).
	ActiveEntry *Entry `protobuf:"bytes,1,opt,name=active_entry,json=activeEntry,proto3" json:"active_entry,omitempty"`
}

func (x *GetActiveEntryResponse) Reset() {
	*x = GetActiveEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveEntryResponse) ProtoMessage() {}

func (x *GetActiveEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveEntryResponse.ProtoReflect.Descriptor instead.
func (*GetActiveEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{5}
}

func (x *GetActiveEntryResponse) GetActiveEntry() *Entry {
	if x != nil {
		return x.ActiveEntry
	}
	return nil
}

// GetEntryListRequest holds query parameters for listing entries. All fields
// adds additional filters, where they combined with the AND operator. An empty
// request message will return all entries.
type GetEntryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start is the starting timestamp bound of entries to list. Any entry that
	// either starts or ends after this time is included. Will override any start
	// timestamp (if any) set by the shorthand field.
	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// End is the ending timestamp bound of entries to list. Any entry that
	// either starts or ends before this time is included. Will override any end
	// timestamp (if any) set by the shorthand field.
	End *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	// Limit is the number of entries to include in the results. A value of zero
	// means no limit is applied. The limit is applied at the end of the results,
	// so a limit of 3 will return the 3 last entries.
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Shorthand sets the default start and end timestamps to some predefined
	// time ranges, relative to now. Setting the start or end fields separately
	// will override the shorthand ranges.
	Shorthand GetEntryListRequest_Shorthand `protobuf:"varint,4,opt,name=shorthand,proto3,enum=dinkurapi.v1.GetEntryListRequest_Shorthand" json:"shorthand,omitempty"`
	// NameFuzzy adds fuzzy name searching. The algorithms used to match the
	// entries are left undefined and up to the Dinkur daemon to alter at any
	// time. By default, a trigram index is used to allow substring matches.
	NameFuzzy string `protobuf:"bytes,5,opt,name=name_fuzzy,json=nameFuzzy,proto3" json:"name_fuzzy,omitempty"`
	// NameHighlightStart enables name search result highlighting. It does nothing
	// if the fuzzy name query is empty. Setting a value of "<b>", while setting
	// the highlight end field to "</b>" will effectively add HTML-styled bold
	// styling to the matching search terms.
	NameHighlightStart string `protobuf:"bytes,6,opt,name=name_highlight_start,json=nameHighlightStart,proto3" json:"name_highlight_start,omitempty"`
	// NameHighlightEnd enables name search result highlighting. It does nothing
	// if the fuzzy name query is empty.
	NameHighlightEnd string `protobuf:"bytes,7,opt,name=name_highlight_end,json=nameHighlightEnd,proto3" json:"name_highlight_end,omitempty"`
}

func (x *GetEntryListRequest) Reset() {
	*x = GetEntryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryListRequest) ProtoMessage() {}

func (x *GetEntryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryListRequest.ProtoReflect.Descriptor instead.
func (*GetEntryListRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{6}
}

func (x *GetEntryListRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetEntryListRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetEntryListRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetEntryListRequest) GetShorthand() GetEntryListRequest_Shorthand {
	if x != nil {
		return x.Shorthand
	}
	return GetEntryListRequest_SHORTHAND_UNSPECIFIED
}

func (x *GetEntryListRequest) GetNameFuzzy() string {
	if x != nil {
		return x.NameFuzzy
	}
	return ""
}

func (x *GetEntryListRequest) GetNameHighlightStart() string {
	if x != nil {
		return x.NameHighlightStart
	}
	return ""
}

func (x *GetEntryListRequest) GetNameHighlightEnd() string {
	if x != nil {
		return x.NameHighlightEnd
	}
	return ""
}

// GetEntryListResponse holds the list of entries that matches the search
// request.
type GetEntryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entries is the list of entries that matches the search request.
	Entries []*Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *GetEntryListResponse) Reset() {
	*x = GetEntryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryListResponse) ProtoMessage() {}

func (x *GetEntryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryListResponse.ProtoReflect.Descriptor instead.
func (*GetEntryListResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{7}
}

func (x *GetEntryListResponse) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// CreateEntryRequest defines a new entry to be created.
type CreateEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the new entry to be created. May not be left unset.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Start is the timestamp of when the entry starts. If left unset, it will
	// default to now.
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// End is the timestamp of when the entry ends. If set, the new entry will not
	// be marked as active. If left unset, any currently active entry will be
	// stopped at when this new entry starts.
	End *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// StartAfterIdOrZero allows automatically setting the start timestamp to the
	// end timestamp of a entry by ID.
	StartAfterIdOrZero uint64 `protobuf:"varint,4,opt,name=start_after_id_or_zero,json=startAfterIdOrZero,proto3" json:"start_after_id_or_zero,omitempty"`
	// EndBeforeIdOrZero allows automatically setting the end timestamp to the
	// start timestamp of a entry by ID.
	EndBeforeIdOrZero uint64 `protobuf:"varint,5,opt,name=end_before_id_or_zero,json=endBeforeIdOrZero,proto3" json:"end_before_id_or_zero,omitempty"`
	// StartAfterLast allows automatically setting the start timestamp to the
	// end timestamp of the latest entry. Using this and the
	// "start after ID or zero" field is considered undefined behavior, and should
	// be avoided.
	StartAfterLast bool `protobuf:"varint,6,opt,name=start_after_last,json=startAfterLast,proto3" json:"start_after_last,omitempty"`
}

func (x *CreateEntryRequest) Reset() {
	*x = CreateEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntryRequest) ProtoMessage() {}

func (x *CreateEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{8}
}

func (x *CreateEntryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEntryRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CreateEntryRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *CreateEntryRequest) GetStartAfterIdOrZero() uint64 {
	if x != nil {
		return x.StartAfterIdOrZero
	}
	return 0
}

func (x *CreateEntryRequest) GetEndBeforeIdOrZero() uint64 {
	if x != nil {
		return x.EndBeforeIdOrZero
	}
	return 0
}

func (x *CreateEntryRequest) GetStartAfterLast() bool {
	if x != nil {
		return x.StartAfterLast
	}
	return false
}

// CreateEntryResponse holds the response data of a successfully created entry.
type CreateEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CreatedEntry is the newly created entry.
	CreatedEntry *Entry `protobuf:"bytes,1,opt,name=created_entry,json=createdEntry,proto3" json:"created_entry,omitempty"`
	// PreviouslyActiveEntry is the previously active entry that was stopped
	// (if any).
	PreviouslyActiveEntry *Entry `protobuf:"bytes,2,opt,name=previously_active_entry,json=previouslyActiveEntry,proto3" json:"previously_active_entry,omitempty"`
}

func (x *CreateEntryResponse) Reset() {
	*x = CreateEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntryResponse) ProtoMessage() {}

func (x *CreateEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{9}
}

func (x *CreateEntryResponse) GetCreatedEntry() *Entry {
	if x != nil {
		return x.CreatedEntry
	}
	return nil
}

func (x *CreateEntryResponse) GetPreviouslyActiveEntry() *Entry {
	if x != nil {
		return x.PreviouslyActiveEntry
	}
	return nil
}

// UpdateEntryRequest holds data for updating a entry.
type UpdateEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IdOrZero is either the ID of the entry to update, or left as zero to update
	// the latest or currently active entry.
	IdOrZero uint64 `protobuf:"varint,1,opt,name=id_or_zero,json=idOrZero,proto3" json:"id_or_zero,omitempty"`
	// Name is the new name of the entry. If left unset, the name will not be
	// updated.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Start is the new starting timestamp of the entry. If left unset, the start
	// timestamp will not be updated.
	Start *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	// End is the new ending timestamp of the entry. If left unset, the end
	// timestamp will not be updated. If set and the entry was previously active
	// then the entry is no longer active.
	End *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// AppendName changes the name field in this message to be appended to the
	// end of the previous name, with a space as delimiter.
	AppendName bool `protobuf:"varint,5,opt,name=append_name,json=appendName,proto3" json:"append_name,omitempty"`
	// StartAfterIdOrZero allows automatically setting the start timestamp to the
	// end timestamp of a entry by ID.
	StartAfterIdOrZero uint64 `protobuf:"varint,6,opt,name=start_after_id_or_zero,json=startAfterIdOrZero,proto3" json:"start_after_id_or_zero,omitempty"`
	// EndBeforeIdOrZero allows automatically setting the end timestamp to the
	// start timestamp of a entry by ID. If set and the entry was previously
	// active then the entry is no longer active.
	EndBeforeIdOrZero uint64 `protobuf:"varint,7,opt,name=end_before_id_or_zero,json=endBeforeIdOrZero,proto3" json:"end_before_id_or_zero,omitempty"`
	// StartAfterLast allows automatically setting the start timestamp to the
	// end timestamp of the latest entry. Using this and the
	// "start after ID or zero" field is considered undefined behavior, and should
	// be avoided.
	StartAfterLast bool `protobuf:"varint,8,opt,name=start_after_last,json=startAfterLast,proto3" json:"start_after_last,omitempty"`
	// Relative preserves the date of the Start and End timestamps, changing only
	// the time of day.
	Relative bool `protobuf:"varint,9,opt,name=relative,proto3" json:"relative,omitempty"`
}

func (x *UpdateEntryRequest) Reset() {
	*x = UpdateEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntryRequest) ProtoMessage() {}

func (x *UpdateEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEntryRequest) GetIdOrZero() uint64 {
	if x != nil {
		return x.IdOrZero
	}
	return 0
}

func (x *UpdateEntryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEntryRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *UpdateEntryRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *UpdateEntryRequest) GetAppendName() bool {
	if x != nil {
		return x.AppendName
	}
	return false
}

func (x *UpdateEntryRequest) GetStartAfterIdOrZero() uint64 {
	if x != nil {
		return x.StartAfterIdOrZero
	}
	return 0
}

func (x *UpdateEntryRequest) GetEndBeforeIdOrZero() uint64 {
	if x != nil {
		return x.EndBeforeIdOrZero
	}
	return 0
}

func (x *UpdateEntryRequest) GetStartAfterLast() bool {
	if x != nil {
		return x.StartAfterLast
	}
	return false
}

func (x *UpdateEntryRequest) GetRelative() bool {
	if x != nil {
		return x.Relative
	}
	return false
}

// UpdateEntryResponse holds the before and after state of the updated entry.
type UpdateEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Before is the state of the entry before the update.
	Before *Entry `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	// After is the up-to-date state of the entry now after the update.
	After *Entry `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *UpdateEntryResponse) Reset() {
	*x = UpdateEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntryResponse) ProtoMessage() {}

func (x *UpdateEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntryResponse.ProtoReflect.Descriptor instead.
func (*UpdateEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateEntryResponse) GetBefore() *Entry {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *UpdateEntryResponse) GetAfter() *Entry {
	if x != nil {
		return x.After
	}
	return nil
}

// DeleteEntryRequest holds the ID of the entry to delete.
type DeleteEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id is the ID of the entry to delete.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEntryRequest) Reset() {
	*x = DeleteEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryRequest) ProtoMessage() {}

func (x *DeleteEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteEntryRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// DeleteEntryResponse holds the entry that was deleted.
type DeleteEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DeletedEntry is the entry that was deleted.
	DeletedEntry *Entry `protobuf:"bytes,1,opt,name=deleted_entry,json=deletedEntry,proto3" json:"deleted_entry,omitempty"`
}

func (x *DeleteEntryResponse) Reset() {
	*x = DeleteEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntryResponse) ProtoMessage() {}

func (x *DeleteEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntryResponse.ProtoReflect.Descriptor instead.
func (*DeleteEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteEntryResponse) GetDeletedEntry() *Entry {
	if x != nil {
		return x.DeletedEntry
	}
	return nil
}

// StopActiveEntryRequest holds fields used when stopping the currently active
// entry.
type StopActiveEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// End allows changing the end timestamp of the active entry to stop. If not
	// set, the current timestamp is used instead.
	End *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StopActiveEntryRequest) Reset() {
	*x = StopActiveEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActiveEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActiveEntryRequest) ProtoMessage() {}

func (x *StopActiveEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActiveEntryRequest.ProtoReflect.Descriptor instead.
func (*StopActiveEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{14}
}

func (x *StopActiveEntryRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

// StopActiveEntryResponse holds the entry that was stopped (if any).
type StopActiveEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// StoppedEntry is the entry that was stopped (if any).
	StoppedEntry *Entry `protobuf:"bytes,1,opt,name=stopped_entry,json=stoppedEntry,proto3" json:"stopped_entry,omitempty"`
}

func (x *StopActiveEntryResponse) Reset() {
	*x = StopActiveEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActiveEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActiveEntryResponse) ProtoMessage() {}

func (x *StopActiveEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActiveEntryResponse.ProtoReflect.Descriptor instead.
func (*StopActiveEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{15}
}

func (x *StopActiveEntryResponse) GetStoppedEntry() *Entry {
	if x != nil {
		return x.StoppedEntry
	}
	return nil
}

// StreamEntryRequest is an empty message and unused. It is here as a
// placeholder for potential future use.
type StreamEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamEntryRequest) Reset() {
	*x = StreamEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEntryRequest) ProtoMessage() {}

func (x *StreamEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEntryRequest.ProtoReflect.Descriptor instead.
func (*StreamEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{16}
}

// StreamEntryResponse is a entry event. A entry has been created, updated,
// or deleted.
type StreamEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entry is the created, updated, or deleted entry.
	Entry *Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// Event is the type of event.
	Event Event `protobuf:"varint,2,opt,name=event,proto3,enum=dinkurapi.v1.Event" json:"event,omitempty"`
}

func (x *StreamEntryResponse) Reset() {
	*x = StreamEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEntryResponse) ProtoMessage() {}

func (x *StreamEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEntryResponse.ProtoReflect.Descriptor instead.
func (*StreamEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{17}
}

func (x *StreamEntryResponse) GetEntry() *Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *StreamEntryResponse) GetEvent() Event {
	if x != nil {
		return x.Event
	}
	return Event_EVENT_UNSPECIFIED
}

// Entry is a Dinkur entry.
type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id is the unique identifier of this entry, and is used when deleting,
	// updating, or getting a entry via the Entries service.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Created is a timestamp of when the entry was initially created. In most
	// cases, this is the same as the entry's start timestamp.
	Created *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// Updated is a timestamp of when the entry was most recently changed. This
	// has the same value as when the entry was created if it has never been
	// updated.
	Updated *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	// Name is the name of this entry, as specified by the user.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Start is the starting timestamp of this entry, as specified by the user.
	Start *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	// End is the ending timestamp of this entry, as specified by the user, or
	// is left unset if the entry is currently active.
	End *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_api_dinkurapi_v1_entries_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_api_dinkurapi_v1_entries_proto_rawDescGZIP(), []int{18}
}

func (x *Entry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Entry) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Entry) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entry) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Entry) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_api_dinkurapi_v1_entries_proto protoreflect.FileDescriptor

var file_api_dinkurapi_v1_entries_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a,
	0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x17,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xcd, 0x04, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x68, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x64, 0x69, 0x6e,
	0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x68, 0x61,
	0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x75, 0x7a, 0x7a, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x7a, 0x7a,
	0x79, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x69, 0x67, 0x68,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e,
	0x64, 0x22, 0xf5, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x48,
	0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x54, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x46, 0x55, 0x54, 0x55,
	0x52, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e,
	0x44, 0x5f, 0x54, 0x48, 0x49, 0x53, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19,
	0x53, 0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x48, 0x49, 0x53, 0x5f, 0x4d,
	0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x55, 0x4e, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x5f, 0x44, 0x41,
	0x59, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44,
	0x5f, 0x50, 0x52, 0x45, 0x56, 0x5f, 0x4d, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x55, 0x4e,
	0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f,
	0x4e, 0x45, 0x58, 0x54, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x48,
	0x4f, 0x52, 0x54, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x4d, 0x4f, 0x4e,
	0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x55, 0x4e, 0x10, 0x08, 0x22, 0x45, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x98, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x16, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72,
	0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12,
	0x30, 0x0a, 0x15, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x5f, 0x6f, 0x72, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11,
	0x65, 0x6e, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72,
	0x6f, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e,
	0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4b, 0x0a,
	0x17, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x15, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xf3, 0x02, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x30, 0x0a, 0x15, 0x65, 0x6e, 0x64, 0x5f,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x7a, 0x65, 0x72,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65, 0x6e, 0x64, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x22, 0x6d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22,
	0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x46, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x53,
	0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x13, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x6e,
	0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x32, 0xf9, 0x05, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75,
	0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x64, 0x69, 0x6e, 0x6b,
	0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x69,
	0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x2e,
	0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x20, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x64, 0x69, 0x6e, 0x6b,
	0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75,
	0x72, 0x2f, 0x64, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x6e,
	0x6b, 0x75, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_dinkurapi_v1_entries_proto_rawDescOnce sync.Once
	file_api_dinkurapi_v1_entries_proto_rawDescData = file_api_dinkurapi_v1_entries_proto_rawDesc
)

func file_api_dinkurapi_v1_entries_proto_rawDescGZIP() []byte {
	file_api_dinkurapi_v1_entries_proto_rawDescOnce.Do(func() {
		file_api_dinkurapi_v1_entries_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_dinkurapi_v1_entries_proto_rawDescData)
	})
	return file_api_dinkurapi_v1_entries_proto_rawDescData
}

var file_api_dinkurapi_v1_entries_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_dinkurapi_v1_entries_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_dinkurapi_v1_entries_proto_goTypes = []interface{}{
	(GetEntryListRequest_Shorthand)(0), // 0: dinkurapi.v1.GetEntryListRequest.Shorthand
	(*PingRequest)(nil),                // 1: dinkurapi.v1.PingRequest
	(*PingResponse)(nil),               // 2: dinkurapi.v1.PingResponse
	(*GetEntryRequest)(nil),            // 3: dinkurapi.v1.GetEntryRequest
	(*GetEntryResponse)(nil),           // 4: dinkurapi.v1.GetEntryResponse
	(*GetActiveEntryRequest)(nil),      // 5: dinkurapi.v1.GetActiveEntryRequest
	(*GetActiveEntryResponse)(nil),     // 6: dinkurapi.v1.GetActiveEntryResponse
	(*GetEntryListRequest)(nil),        // 7: dinkurapi.v1.GetEntryListRequest
	(*GetEntryListResponse)(nil),       // 8: dinkurapi.v1.GetEntryListResponse
	(*CreateEntryRequest)(nil),         // 9: dinkurapi.v1.CreateEntryRequest
	(*CreateEntryResponse)(nil),        // 10: dinkurapi.v1.CreateEntryResponse
	(*UpdateEntryRequest)(nil),         // 11: dinkurapi.v1.UpdateEntryRequest
	(*UpdateEntryResponse)(nil),        // 12: dinkurapi.v1.UpdateEntryResponse
	(*DeleteEntryRequest)(nil),         // 13: dinkurapi.v1.DeleteEntryRequest
	(*DeleteEntryResponse)(nil),        // 14: dinkurapi.v1.DeleteEntryResponse
	(*StopActiveEntryRequest)(nil),     // 15: dinkurapi.v1.StopActiveEntryRequest
	(*StopActiveEntryResponse)(nil),    // 16: dinkurapi.v1.StopActiveEntryResponse
	(*StreamEntryRequest)(nil),         // 17: dinkurapi.v1.StreamEntryRequest
	(*StreamEntryResponse)(nil),        // 18: dinkurapi.v1.StreamEntryResponse
	(*Entry)(nil),                      // 19: dinkurapi.v1.Entry
	(*timestamppb.Timestamp)(nil),      // 20: google.protobuf.Timestamp
	(Event)(0),                         // 21: dinkurapi.v1.Event
}
var file_api_dinkurapi_v1_entries_proto_depIdxs = []int32{
	19, // 0: dinkurapi.v1.GetEntryResponse.entry:type_name -> dinkurapi.v1.Entry
	19, // 1: dinkurapi.v1.GetActiveEntryResponse.active_entry:type_name -> dinkurapi.v1.Entry
	20, // 2: dinkurapi.v1.GetEntryListRequest.start:type_name -> google.protobuf.Timestamp
	20, // 3: dinkurapi.v1.GetEntryListRequest.end:type_name -> google.protobuf.Timestamp
	0,  // 4: dinkurapi.v1.GetEntryListRequest.shorthand:type_name -> dinkurapi.v1.GetEntryListRequest.Shorthand
	19, // 5: dinkurapi.v1.GetEntryListResponse.entries:type_name -> dinkurapi.v1.Entry
	20, // 6: dinkurapi.v1.CreateEntryRequest.start:type_name -> google.protobuf.Timestamp
	20, // 7: dinkurapi.v1.CreateEntryRequest.end:type_name -> google.protobuf.Timestamp
	19, // 8: dinkurapi.v1.CreateEntryResponse.created_entry:type_name -> dinkurapi.v1.Entry
	19, // 9: dinkurapi.v1.CreateEntryResponse.previously_active_entry:type_name -> dinkurapi.v1.Entry
	20, // 10: dinkurapi.v1.UpdateEntryRequest.start:type_name -> google.protobuf.Timestamp
	20, // 11: dinkurapi.v1.UpdateEntryRequest.end:type_name -> google.protobuf.Timestamp
	19, // 12: dinkurapi.v1.UpdateEntryResponse.before:type_name -> dinkurapi.v1.Entry
	19, // 13: dinkurapi.v1.UpdateEntryResponse.after:type_name -> dinkurapi.v1.Entry
	19, // 14: dinkurapi.v1.DeleteEntryResponse.deleted_entry:type_name -> dinkurapi.v1.Entry
	20, // 15: dinkurapi.v1.StopActiveEntryRequest.end:type_name -> google.protobuf.Timestamp
	19, // 16: dinkurapi.v1.StopActiveEntryResponse.stopped_entry:type_name -> dinkurapi.v1.Entry
	19, // 17: dinkurapi.v1.StreamEntryResponse.entry:type_name -> dinkurapi.v1.Entry
	21, // 18: dinkurapi.v1.StreamEntryResponse.event:type_name -> dinkurapi.v1.Event
	20, // 19: dinkurapi.v1.Entry.created:type_name -> google.protobuf.Timestamp
	20, // 20: dinkurapi.v1.Entry.updated:type_name -> google.protobuf.Timestamp
	20, // 21: dinkurapi.v1.Entry.start:type_name -> google.protobuf.Timestamp
	20, // 22: dinkurapi.v1.Entry.end:type_name -> google.protobuf.Timestamp
	1,  // 23: dinkurapi.v1.Entries.Ping:input_type -> dinkurapi.v1.PingRequest
	3,  // 24: dinkurapi.v1.Entries.GetEntry:input_type -> dinkurapi.v1.GetEntryRequest
	5,  // 25: dinkurapi.v1.Entries.GetActiveEntry:input_type -> dinkurapi.v1.GetActiveEntryRequest
	7,  // 26: dinkurapi.v1.Entries.GetEntryList:input_type -> dinkurapi.v1.GetEntryListRequest
	9,  // 27: dinkurapi.v1.Entries.CreateEntry:input_type -> dinkurapi.v1.CreateEntryRequest
	11, // 28: dinkurapi.v1.Entries.UpdateEntry:input_type -> dinkurapi.v1.UpdateEntryRequest
	13, // 29: dinkurapi.v1.Entries.DeleteEntry:input_type -> dinkurapi.v1.DeleteEntryRequest
	15, // 30: dinkurapi.v1.Entries.StopActiveEntry:input_type -> dinkurapi.v1.StopActiveEntryRequest
	17, // 31: dinkurapi.v1.Entries.StreamEntry:input_type -> dinkurapi.v1.StreamEntryRequest
	2,  // 32: dinkurapi.v1.Entries.Ping:output_type -> dinkurapi.v1.PingResponse
	4,  // 33: dinkurapi.v1.Entries.GetEntry:output_type -> dinkurapi.v1.GetEntryResponse
	6,  // 34: dinkurapi.v1.Entries.GetActiveEntry:output_type -> dinkurapi.v1.GetActiveEntryResponse
	8,  // 35: dinkurapi.v1.Entries.GetEntryList:output_type -> dinkurapi.v1.GetEntryListResponse
	10, // 36: dinkurapi.v1.Entries.CreateEntry:output_type -> dinkurapi.v1.CreateEntryResponse
	12, // 37: dinkurapi.v1.Entries.UpdateEntry:output_type -> dinkurapi.v1.UpdateEntryResponse
	14, // 38: dinkurapi.v1.Entries.DeleteEntry:output_type -> dinkurapi.v1.DeleteEntryResponse
	16, // 39: dinkurapi.v1.Entries.StopActiveEntry:output_type -> dinkurapi.v1.StopActiveEntryResponse
	18, // 40: dinkurapi.v1.Entries.StreamEntry:output_type -> dinkurapi.v1.StreamEntryResponse
	32, // [32:41] is the sub-list for method output_type
	23, // [23:32] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_dinkurapi_v1_entries_proto_init() }
func file_api_dinkurapi_v1_entries_proto_init() {
	if File_api_dinkurapi_v1_entries_proto != nil {
		return
	}
	file_api_dinkurapi_v1_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_dinkurapi_v1_entries_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActiveEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActiveEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dinkurapi_v1_entries_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_dinkurapi_v1_entries_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_dinkurapi_v1_entries_proto_goTypes,
		DependencyIndexes: file_api_dinkurapi_v1_entries_proto_depIdxs,
		EnumInfos:         file_api_dinkurapi_v1_entries_proto_enumTypes,
		MessageInfos:      file_api_dinkurapi_v1_entries_proto_msgTypes,
	}.Build()
	File_api_dinkurapi_v1_entries_proto = out.File
	file_api_dinkurapi_v1_entries_proto_rawDesc = nil
	file_api_dinkurapi_v1_entries_proto_goTypes = nil
	file_api_dinkurapi_v1_entries_proto_depIdxs = nil
}
